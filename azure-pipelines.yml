# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'


variables:
  imagename: 'test'
  registryname: 'testacrscanning.azurecr.io'

steps:
- task: Docker@2
  inputs:
    containerRegistry: 'TESTACR5'
    repository: '$(imagename)'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Aqua NProd Login'
    command: 'login'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'docker pull moniseeta/resourceful-image:v1'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo $AQUA_SCANNER_NAME
      docker pull acemnldaquacr01.azurecr.io/aquasec/scanner:latest
    
- task: aquasecScanner@4
  inputs:
    image: 'moniseeta/resourceful-image:v1'
    scanType: 'local'
    register: false
    hideBase: false
    showNegligible: false
    windowsScannerVersion: '4.2.0'
    scanner: 'acemnldaquacr01.azurecr.io/aquasec/scanner:latest'
    runOptions: '--privileged -e SCALOCK_LOG_LEVEL=DEBUG'
    registry: 'testacrscanning'
    connection: 'Aqua Scanner Info'
    customFlags: '--direct-cc'
    caCertificates: true
    scanMalware: true
    registerCompliant: true

- task: Docker@2
  inputs:
    containerRegistry: 'TESTACR5'
    repository: '$(imagename)'
    command: 'push'

